/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package formulario;

import clases.Analizador;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.io.*;
import java.util.logging.Level;
import java.util.logging.Logger;


/**
 *
 * @author eddpe
 */
public class editor extends javax.swing.JFrame {

    /**
     * Creates new form editor
     */
    public editor() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtConsola = new javax.swing.JTextArea();
        btnAnalizar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtEditor = new javax.swing.JTextArea();
        btnLimpiar = new javax.swing.JButton();
        mnBar = new javax.swing.JMenuBar();
        archivoAbrir = new javax.swing.JMenu();
        mnArchivoNuevo = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        mnArchivoGuardar = new javax.swing.JMenuItem();
        mnArchivoSalir = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        mnAyudaAcercade = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Analizador LÃ©xico V0.5");
        setName("frmAnalizador"); // NOI18N

        txtConsola.setColumns(20);
        txtConsola.setFont(new java.awt.Font("Liberation Mono", 0, 14)); // NOI18N
        txtConsola.setRows(5);
        txtConsola.setText("Consola...");
        txtConsola.setEnabled(false);
        jScrollPane1.setViewportView(txtConsola);

        btnAnalizar.setText("Analizar");
        btnAnalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnalizarActionPerformed(evt);
            }
        });

        txtEditor.setColumns(20);
        txtEditor.setRows(5);
        jScrollPane2.setViewportView(txtEditor);

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        archivoAbrir.setText("Archivo");

        mnArchivoNuevo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        mnArchivoNuevo.setText("Nuevo");
        mnArchivoNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnArchivoNuevoActionPerformed(evt);
            }
        });
        archivoAbrir.add(mnArchivoNuevo);

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Abrir");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        archivoAbrir.add(jMenuItem1);

        mnArchivoGuardar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        mnArchivoGuardar.setText("Guardar");
        mnArchivoGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnArchivoGuardarActionPerformed(evt);
            }
        });
        archivoAbrir.add(mnArchivoGuardar);

        mnArchivoSalir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        mnArchivoSalir.setText("Salir");
        mnArchivoSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnArchivoSalirActionPerformed(evt);
            }
        });
        archivoAbrir.add(mnArchivoSalir);

        mnBar.add(archivoAbrir);

        jMenu2.setText("Ayuda");

        mnAyudaAcercade.setText("Acerca de");
        jMenu2.add(mnAyudaAcercade);

        mnBar.add(jMenu2);

        setJMenuBar(mnBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnAnalizar)
                    .addComponent(btnLimpiar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(btnAnalizar)
                .addGap(18, 18, 18)
                .addComponent(btnLimpiar)
                .addContainerGap(163, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    void abrirArchivo(){
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Archivos TXT", "txt");
        fileChooser.setFileFilter(filtro);
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        if (JFileChooser.APPROVE_OPTION == fileChooser.showOpenDialog(this)) {
        File archivo = fileChooser.getSelectedFile();
        FileReader lector = null;
        try {
            lector = new FileReader(archivo);
            BufferedReader bfReader = new BufferedReader(lector);

            String lineaFichero;
            StringBuilder contenidoFichero = new StringBuilder();

            // Recupera el contenido del fichero
            while ((lineaFichero = bfReader.readLine()) != null) {
                contenidoFichero.append(lineaFichero);
                contenidoFichero.append("\n");
            }

            // Pone el contenido del fichero en el area de texto
            txtEditor.setText(contenidoFichero.toString());

        } catch (FileNotFoundException ex) {
            Logger.getLogger(editor.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(editor.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                lector.close();
            } catch (IOException ex) {
                Logger.getLogger(editor.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        }
    }
    
    public void guardarArchivo() {
    JFileChooser fileChooser = new JFileChooser();
    FileNameExtensionFilter filtro = new FileNameExtensionFilter("Archivos TXT", "txt");
    fileChooser.setFileFilter(filtro);
    fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
    if (JFileChooser.APPROVE_OPTION == fileChooser.showSaveDialog(this)) {
        File archivo = fileChooser.getSelectedFile();
        String PATH = archivo.getAbsolutePath();
        FileWriter escritor = null;
        try {
            escritor = new FileWriter(archivo);
            escritor.write(txtEditor.getText());
            if(!(PATH.endsWith(".txt"))){
                File temp = new File(PATH+".txt");
                archivo.renameTo(temp);//renombramos el archivo
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(editor.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(editor.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                escritor.close();
            } catch (IOException ex) {
                Logger.getLogger(editor.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
}
    
    private void btnAnalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnalizarActionPerformed
        Analizador objAnalizador = new Analizador(txtEditor.getText());
        objAnalizador.encontrarTokens();
        txtConsola.setText("Resultados: \n" +
            "IDs: " + objAnalizador.tokens[0] +'\n'+
            "Entero: " + objAnalizador.tokens[1] + '\n' + 
            "Real: " + objAnalizador.tokens[2] + '\n' + 
            "Cadena: " + objAnalizador.tokens[3] + '\n' +
            "Dos pt.: " + objAnalizador.tokens[4] + '\n' +
            "Pt coma: " + objAnalizador.tokens[5] + '\n' +
            "Igual: " + objAnalizador.tokens[6] + '\n' +
            "Suma: " + objAnalizador.tokens[7] + '\n' +
            "Resta: " + objAnalizador.tokens[8] + '\n' +
            "Mult: " + objAnalizador.tokens[9] + '\n' +
            "Div: " + objAnalizador.tokens[10] + '\n' +
            "Coma: " + objAnalizador.tokens[11] + '\n' +    
            "Par. ab: " + objAnalizador.tokens[12] + '\n' +
            "Par. cer: " + objAnalizador.tokens[13] + '\n' +
            "Llave ab: " + objAnalizador.tokens[14] + '\n' +
            "Llave cer: " + objAnalizador.tokens[15] + '\n' +
            "Mayor que: " + objAnalizador.tokens[16] + '\n' +
            "Menor: " + objAnalizador.tokens[17] + '\n' +
            "Mayor igual: " + objAnalizador.tokens[18] + '\n' +
            "Menor igual: " + objAnalizador.tokens[19] + '\n' +
            "Diferente: " + objAnalizador.tokens[20] + '\n' +
            "PR Void: " + objAnalizador.tokens[21] + '\n' +
            "PR Entero: " + objAnalizador.tokens[22] + '\n' +
            "PR Real: " + objAnalizador.tokens[23] + '\n' +
            "PR Cadena: " + objAnalizador.tokens[24] + '\n' +
            "PR Salida: " + objAnalizador.tokens[25] + '\n' +
            "PR Entrada: " + objAnalizador.tokens[26] + '\n' +
            "PR si: " + objAnalizador.tokens[27] + '\n' +
            "PR entonces: " + objAnalizador.tokens[28] + '\n' +
            "PR sino: " + objAnalizador.tokens[29] + '\n' +
            "PR finsi: " + objAnalizador.tokens[30] + '\n' +
            "PR Principal: " + objAnalizador.tokens[31] + '\n' +
            "PR Llamar: " + objAnalizador.tokens[32] + '\n' +
            "Errores: " + objAnalizador.errores + '\n' +
            "----------------------\n" +
            "Lexemas Validos: \n" +
                objAnalizador.lexValidos + '\n'+
            "Lexemas NO Validos: \n" +
                objAnalizador.lexNoValidos);
    }//GEN-LAST:event_btnAnalizarActionPerformed

    private void mnArchivoNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnArchivoNuevoActionPerformed
        txtEditor.setText("");
        txtConsola.setText("Consola...");
    }//GEN-LAST:event_mnArchivoNuevoActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        abrirArchivo();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void mnArchivoGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnArchivoGuardarActionPerformed
        guardarArchivo();
    }//GEN-LAST:event_mnArchivoGuardarActionPerformed

    private void mnArchivoSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnArchivoSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_mnArchivoSalirActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        txtConsola.setText("Consola...");
        txtEditor.setText("");
    }//GEN-LAST:event_btnLimpiarActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new editor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu archivoAbrir;
    private javax.swing.JButton btnAnalizar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenuItem mnArchivoGuardar;
    private javax.swing.JMenuItem mnArchivoNuevo;
    private javax.swing.JMenuItem mnArchivoSalir;
    private javax.swing.JMenuItem mnAyudaAcercade;
    private javax.swing.JMenuBar mnBar;
    private javax.swing.JTextArea txtConsola;
    private javax.swing.JTextArea txtEditor;
    // End of variables declaration//GEN-END:variables
}
